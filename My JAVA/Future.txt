package fun2;
import java.util.*;
import java.util.List;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Future;
import java.util.concurrent.FutureTask;
import java.io.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.*;
public class fun2
{
	public static void main(String[]args)
	{
		MatchCounter counter=new MatchCounter(new File("C:/Users/wwx/Desktop/text1"),"aaab");
		FutureTask<Integer>task=new FutureTask<>(counter);
		Thread t=new Thread(task);
		t.start();
		try
		{
			System.out.println(task.get()+"matching file");
		}
		catch(ExecutionException e)
		{
			e.printStackTrace();
		}
		catch(InterruptedException e)
		{
		}
	}
}
class MatchCounter implements Callable<Integer>
{
	private File directory;
	private String keyword;
	private int count;
	public MatchCounter(File directory,String keyword)
	{
		this.directory=directory;
		this.keyword=keyword;
	}
	public Integer call()
	{
		count=0;
		try
		{
			File[]files=directory.listFiles();
			List<Future<Integer>>results=new ArrayList<>();
			for(File file:files)
			{
				if(file.isDirectory())
			{
				MatchCounter counter=new MatchCounter(file,keyword);
				FutureTask<Integer>task=new FutureTask<>(counter);
				results.add(task);
				Thread t=new Thread(task);
				t.start();
			}
			else
			{
				if(search(file))count++;
			}
			}
			for(Future<Integer>result:results)
			{
				try
				{
					count+=result.get();
				}
				catch(ExecutionException e)
				{
					e.printStackTrace();
				}
			}
			}
				catch(InterruptedException e)
				{
					
				}
				return count;
			}
public boolean search(File file)
{
	try
	{
		try(Scanner in=new Scanner(file))
		{
			boolean found=false;
			while(!found&&in.hasNextLine())
			{
				String line=in.nextLine();
				if(line.contains(keyword))found=true;
			}
			return found;
		}
	}
		catch(IOException e)
		{
			return false;
		}
	}
}
















