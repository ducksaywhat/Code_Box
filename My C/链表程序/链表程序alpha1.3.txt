#include<iostream>
using namespace std;
typedef struct haha{
	int date;
	struct haha *next;
}haha;
typedef struct hehe{
       int ON;
	   haha *l;
}hehe;
void creatlist(hehe *lh)
{       int w(0);
        int e(0);
         while(w<5)
        {
         if(lh[w].ON==0)
              e++;
         if((w==4)&&(e==0))
              {
            cout<<"当前无空闲轨道，请清空一条轨道或选择则其他操作"<<endl;
            return;}
              w++;
         }
        cout<<"当前各轨道状态为:"<<endl;
        w=0;
        while(w<5)
        {
         if(lh[w].ON==0)
           cout<<"当前"<<w+1<<"号轨道 OFF"<<endl;
           else
           cout<<"当前"<<w+1<<"号轨道 ON"<<endl;
           w++;
         }
          e=0;
         while(true){
         cout<<"请输入您想要创建链表所在轨道号"<<endl;
         cin>>e;
         if(lh[e-1].ON==0)break;
         cout<<"需选择可用的空轨道，请重新输入"<<endl
			;         
         }
         
    int t;
	cout<<"请输入想要创建的链表的大小（数字）:"<<endl;
		   cin>>t;
	int i(0);
	haha *b=lh[e-1].l=new haha;;
	while(true)
	{
	haha *p=new haha;
	cout<<"请输入你想要输入的第"<<i+1<<"个链表元素的数值"<<endl;
	cin>>p->date;
	b->next=p;
	b=p;
	if(i++==(t-1))
	{
        b->next=NULL;
		break;
	}
	}
	lh[e-1].ON=1;
	cout<<"***********链表创建成功***********"<<endl;
}
void displist(hehe *lh)
{
        int w(0);
		int e(0);
		cout<<"当前各轨道状态为:"<<endl;
        while(w<5)
        {
         if(lh[w].ON==0)
           cout<<"当前"<<w+1<<"号轨道 ON"<<endl;
           else
           cout<<"当前"<<w+1<<"号轨道 OFF"<<endl;
           w++;
         }
         while(true){
         cout<<"请输入您想要展示链表所在轨道号"<<endl;
         cin>>e;
         if(lh[e-1].ON==1)break;
         cout<<"您选择的轨道为空轨道，请重新选择或输入0返回"<<endl; 
		 if(e==0)break;
         }
		 if(e==0)return;
	int i(0);
	haha *b=lh[e-1].l->next;
	while(b)
	{
		cout<<"该链表的第"<<i+1<<"个元素为:"<<b->date<<endl;
		b=b->next;
			i++;
	};
	cout<<"***********链表展示完成***********"<<endl;
}
void deletelist(hehe *lh)
{   int w(0);
    int r(0);
	cout<<"当前各轨道状态为:"<<endl;
        while(w<5)
        {
         if(lh[w].ON==0)
           cout<<"当前"<<w+1<<"号轨道 ON"<<endl;
           else
           cout<<"当前"<<w+1<<"号轨道 OFF"<<endl;
           w++;
         }
		while(true){
         cout<<"请输入您想要删除的链表所在轨道号"<<endl;
         cin>>r;
         if(lh[r-1].ON==1)break;
         cout<<"您选择的轨道为空轨道，请重新选择或输入0返回"<<endl; 
		 if(r==0)break;
         }
		 if(r==0)return;
	
	int e;
	cin>>e;
	haha *b=lh[e-1].l->next;
	haha *temp;
	 while(b)
	 {
		 temp=b;
		 b=b->next;
		 delete temp;
	 }
	 lh[e-1].ON=0;
	 cout<<"***********链表删除完成***********"<<endl;
}
void getlistelem(haha *l)
{
	int i;
        cout<<"请输入你想要获取元素的位置:"<<endl;
			cin>>i;
	haha *b=l->next;
	int a(0);
	while(a<i-1)
	{
		b=b->next;
		a++;
	}
	cout<<"该链表中的第"<<i<<"个元素为:"<<b->date<<endl; 
			cout<<"***********元素获取成功***********"<<endl;

}
void deleteelem(haha *l)
{
	int i;
	cout<<"请输入你想要删除的元素的位置:"<<endl;
			cin>>i;
	haha *temp;
	haha *b=l;
	int a(0);
	while(a<i-1)
	{
		b=b->next;
		a++;
	}
	temp=b->next;
	b->next=b->next->next;
	delete temp;
	cout<<"***********元素删除完成***********"<<endl;
}
void addelem(haha *l)
{
	int i;
	int d;
	cout<<"请输入你想要在链表中添加元素的位置:"<<endl;
	cin>>i;
	cout<<"请输入您想要添加元素的数值:"<<endl;
	cin>>d;
	haha *b=l->next;
	int a(0);
	if(i==1)
	{
      haha *elem=new haha;
	  elem->date=d;
	  elem->next=l->next;
	  l->next=elem;
	}
	else{
	while(a<i-2)
	{
		b=b->next;
		a++;
	}
	haha *elem=new haha;
	elem->date=d;
	elem->next=b->next;
	b->next=elem;
	}
	cout<<"***********元素添加完成***********"<<endl;
}
void addlistinorder(haha *l1,haha *l2)
{}
void disp2()
{
	    cout<<"请输入你想使用的功能"<<endl;
		cout<<"a,从链表中获得一个元素"<<endl;
		cout<<"b,从链表中删除一个元素"<<endl;
		cout<<"c,往链表中添加一个元素"<<endl;
		cout<<"d,将两个已创建的链表中的元素按照大小顺序合并成一个链表"<<endl;
		cout<<"z,返回上一页"<<endl;
}
void disp1()
{
	cout<<"请选择你想要使用的功能"<<endl;
	cout<<"a,创建链表"<<endl;
	cout<<"b,删除链表"<<endl;
	cout<<"c,链表展示"<<endl;
	cout<<"d,链表操作"<<endl;
	cout<<"z,退出程序"<<endl;
}
void work(hehe *lh)
{
     	int w(0);
		int e(0);
		cout<<"当前各轨道状态为:"<<endl;
        while(w<5)
        {
         if(lh[w].ON==0)
           cout<<"当前"<<w+1<<"号轨道 OFF"<<endl;
           else
           cout<<"当前"<<w+1<<"号轨道 ON"<<endl;
           w++;
         }
         while(true){
         cout<<"请输入您想要操作链表所在轨道号"<<endl;
         cin>>e;
         if(lh[e-1].ON==1)break;
         cout<<"您选择的轨道为空轨道，请重新选择或输入0返回"<<endl; 
		 if(e==0)break;
         }
		 if(e==0)return;
    char c;
	haha *l=lh[e-1].l;
	while(true){
		disp2();
		cin>>c;
		switch(c){
		case 'a':{getlistelem(l);};break; 
		case 'b':{deleteelem(l);};break;
		case 'c':{addelem(l);};break;
		case 'd':{cout<<"此功能暂未开启，本程序有待完善，敬请期待下一个版本"<<endl;};
		case 'z':{};break;
		default:cout<<"***********输入错误***********"<<endl;
		};
		if(c=='z')break;
		
	};
}


int main()
{  
	cout<<"******本程序由作者wwx制作，仅用于学习与交流******"<<endl;
	cout<<"******     制作时间:2017年3月29日          ******"<<endl;
	cout<<"程序简介:"<<endl<<"本程序提供简单的数据处理(链表)，由于内存"<<endl;
	cout<<"安全考虑和实际需求考虑仅提供五列存储轨道。"<<endl;
	cout<<endl;
	cout<<"******       按任意键开启本程序            ******"<<endl;
    getchar();
	int i(0);
	hehe *lh=new hehe[5];
	while(i<5)
	{
		lh[i].ON=0;
		i++;
	}
	char a;
	while(true)
	{
		disp1();
		cin>>a;
		switch(a)
		{
		case 'a':creatlist(lh);break;
		case 'b':deletelist(lh);break;
		case 'c':displist(lh);break;
		case 'd':work(lh);break;
        case 'z':{ };break;
     	default:cout<<"***********输入错误***********"<<endl;
		};
		if(a=='z'){
		cout<<"***********感谢使用***********"<<endl;
		break;};
		};
	return 0;
}
//此版本（链表程序alpha1.3）并非最终版本，等作者能力更强之后会回顾此程序对其进行优化和加强。最终形成beta版本以至图形版本。
//还请继续努力，加油
//3.29
//在程序开始时候选择轨道时，输入非数字时。发生程序崩溃，需要优化这一点，解决方案目前想到的是清空输入流
//实现方法在文档"清空输入数据流"内，但还是觉得不甚完美，但由于作者一天没吃饭了下午还要去图书馆就只好作罢
//待改日再打补丁进去。
//洗个头去吃饭，美滋滋
//4.03