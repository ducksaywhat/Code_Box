int * mysort(int *arr,int s,int e)
{
	if ((e - s) < 1)return 0;
	if ((e - s) == 1)
	{
		int* t = new int{ arr[s] };
		return t;
	}
	int mid = s + ((e - s) >> 1);
	int*left = mysort(arr, s, mid);
	int*right = mysort(arr, mid, e);
	if (left == 0)return right;
	else if (right == 0)return left;
	int *sorted = new int[e - s];
	int lid = 0, rid = 0,i=0;
	for ( ;(lid< mid-s)&&(rid<e-mid);)
	{
		if (left[lid] > right[rid])  sorted[i++] = right[rid++];
		else  sorted[i++] = left[lid++]; 
	}
	for (; lid <mid-s;)
	{
		sorted[i++] = left[lid++];
	}
	for (; rid < e-mid;)
	{
		sorted[i++] = right[rid++];
	}
	return sorted;
}