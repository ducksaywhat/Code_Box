class Solution {
public:
    bool *map;
    bool hasPath(char* matrix, int rows, int cols, char* str)
    {
        map=new bool[rows*cols]();
        if(*str=='\0')
            return false;
         for(int i =0;i<rows*cols;i++)
        {
             int m =i/cols;
             int n =i%cols;
            if(getit(matrix,m,n,rows,cols,str))return true;
        }
        return false;
    }
    bool getit(char* matrix,int m,int n,int rows, int cols, char* str)
    {
        if((*str)=='\0')return true;
        if(map[m*cols+n])return false;
        if(matrix[m*cols+n]!=*str)return false;
        if(m<0||m>=rows||n<0||n>=cols)return false;
        map[m*cols+n]=true;
        bool up=0,down=0,left=0,right=0;
        up=getit(matrix,m-1,n,rows,cols,str+1);
        down=getit(matrix,m+1,n,rows,cols,str+1);
        left=getit(matrix,m,n-1,rows,cols,str+1);
        right=getit(matrix,m,n+1,rows,cols,str+1);
        map[m*cols+n]=false;
        return up||down||left||right;
    }
};//代码问题前后墨迹了两个小时差不多  佛了
//基础不扎实真的不行....多用还是多学呢