public class Solution {
    Stack<Integer> stack = new Stack<Integer>();
    Stack<Integer> min = new Stack<Integer>();
    
    public void push(int node) {
        stack.push(node);
        if(min.isEmpty()||min.peek()>node)
            min.push(node);
    }
    
    public void pop() {
        if(stack.isEmpty())return;
        int node =stack.pop();
        if(!min.isEmpty()&&min.peek()==node)
            min.pop();
        //return node;
    }
    
    public int top() {
        if(stack.isEmpty())return 0;
        int node =stack.pop();
        if(!min.isEmpty()||min.peek()==node)
            min.pop();
        return node;
    }
    
    public int min() {
        if(!min.isEmpty())return min.peek();
        return 0;
    }
}//越做越木.......所以 干什么都不要疲劳工作