public class Solution {
    public ArrayList<ArrayList<Integer> > Print(TreeNode pRoot) {
        ArrayList<ArrayList<Integer>> ans = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> temp = new ArrayList<Integer>();
        for(int d=0,i=1;PrintDepth(pRoot,temp,d,0,i);d++){
                i=-i;
                ans.add(new ArrayList<Integer>(temp));
                temp.clear();
            }
         return ans;
    }
    public boolean PrintDepth(TreeNode pRoot,ArrayList<Integer> arr,int d,int n,int i)
    {
        if(pRoot==null)return false;
            if(i==1){
                if(d==n){
                arr.add(pRoot.val);
                    return true;
                }
                return PrintDepth(pRoot.left,arr,d,n+1,i)|PrintDepth(pRoot.right,arr,d,n+1,i);
            }
            else{
                if(d==n){
                arr.add(pRoot.val);
                return true;
                }
                return PrintDepth(pRoot.right,arr,d,n+1,i)|PrintDepth(pRoot.left,arr,d,n+1,i);
            }
    }
}